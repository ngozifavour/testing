/* colors we would be using */
:root {
    --color-primary: #c69963;
    --color-primary-dark: #B28451;

    --color-secondary: #101d2c;

    --color-grey-light1: #f9f7f6;
    --color-grey-light2: #aaa;

    --color-grey-dark1: #54483A;
    --color-grey-dark2: #6D5D4B;

    --font-family1: "Nunito", "san-serif";
    --font-family2: "Josefin Sans" "sans-serif"


}

/*these are atomic classes */
.mb-sm {
    margin-bottom: 2rem;
}

.mb-md {
    margin-bottom: 3rem;
}

.mb-large {
    margin-bottom: 4rem;
}

.mb-big {
    margin-bottom: 8rem;
}

*,
*::before,
*::after {
    box-sizing: inherit;
    margin: 0;
    padding: 0;

}

html {

    box-sizing: border-box;
    font-size: 62.5%;
    /* 10px/16px=62.5% 1rem=10px    note 16px is the browsers default browser */

}

body {
    font-weight: 300;
    font-family: var(--font-family1);
    line-height: 1.6;
    color: var(--color-grey-dark2);


}

.body-container {
    display: grid;
    /* with the grid-templates-rows below, we are defining the layout of how the contents will adapt
    to sizing in row order */
    grid-template-rows: 80vh min-content 40vw
        /*min-content min-content min-content*/
        repeat(3, min-content);
    /*repeat(3,min-content) 
    we could also write the three last min-content in the form of repeat(3,min-content). 
    the min-content means that the row should grow or reduce with the page increase or decrease*/

    grid-template-columns: [sidebar-start] 8rem [sidebar-end repeat-start] minmax(6rem, 1fr) [center-start] repeat(8, [col-start]minmax(min-content, 14rem)[col-end]) [center-end] minmax(6rem, 1fr)[repeat-end];
    /* the col-start and col-end  covers the 8 columns in the middle */
}

.nav-bar {
    /*background: var(--color-primary);*/
    /* the line of code below sets the side-bar row from the top of the page to the end */
    /* note in the 1/-1, the -1 works if we have a defined number of rows else we use span 2 if we dont have a defined number of rows*/
    grid-row: 1/-1;
    /*the line of code below sets the side-bar horizontally to the width maped out from our body layout "sidebar-start-sidebar-end"*/
    grid-column: sidebar-start/sidebar-end;
    display: flex;
    justify-content: center;
    background: #aaa;
}

















/* this is the part for styling the features section */
.features {

    grid-column: center-start/center-end;
    display: grid;
    /* grid-template-columns: repeat(3, 1fr); */
    grid-template-columns: repeat(auto-fit, minmax(25rem, 1fr));
    padding: 15rem 0;
    grid-gap: 6rem;
    align-items: start;

}

.feature {
    display: grid;
    grid-template-columns: min-content 1fr;
    grid-column-gap: 2.5rem;
    grid-row-gap: 1.2rem;
}

.open-icon {
    width: 4.5rem;
    height: 4.5rem;
    fill: var(--color-primary);
    grid-row: 1/ span 2;

}

.features-text {
    font-size: 1.7rem;
}

.hfour-real {
    font-family: var(--font-family2);
    font-weight: 400;
    font-size: 1.9rem;
}

.hfour-dark {
    color: var(--color-grey-dark1)
}

/* this is the part for the  stories section or segment */
.stories {
    background: var(--color-grey-light1);
    grid-column: col-start 5/repeat-end;
    /* the 8vw makes the text to be responsive as the width is reduced to smaller screen devices*/
    padding: 6rem 8vw;
    display: flex;
    flex-direction: column;
    align-items: start;





    /* display:grid;
    justify-items: start;
    align-content: center;*/



}

.heading-three {
    font-family: var(--font-family2);
    font-size: 1.6rem;
    font-weight: 400;
    font-family: var(--font-family2);
    color: var(--color-primary);
    text-transform: uppercase;


}

.heading-two {
    font-weight: 400;
    font-style: italic;
    font-size: 4rem;
    color: var(--color-grey-dark1);
    line-height: 1
}

.btn {
    background: var(--color-primary);
    cursor: pointer;
    border: none;

    text-transform: uppercase;
    padding: 1.7rem 3rem;
    color: #fff;
    font-family: var(--font-family2);
    transition: all .2s;

}

.btn:hover {
    background: var(--color-primary-dark);

}

.story-text {

    font-size: 1.5rem;
    font-style: italic;


}

/*this part is the pictures part of the */
.pictures {
    background: var(--color-primary);
    grid-column: repeat-start/ col-end 4;
    display: grid;
    grid-template-columns: repeat(6, 1fr);
    grid-template-rows: repeat(6, 1fr);
    align-items: center;
    background-image: linear-gradient(rgba(4, 9, 30, 0.7), rgba(4, 9, 30, 0.7)),
        /*linear-gradient(rgba( #c69963, .5), rgba( #c69963, .5)), */
        url(../images/back.jpg);
    background-size: cover;
    background-position: center;

}



.pictures .img {
    grid-column: 2/6;
    grid-row: 2/ 6;
    width: 100%;
    box-shadow: 0 2rem 5rem rgba(0 0 0 .1);

}

.pictures .imgg {
    grid-row: 4/6;
    grid-column: 4/7;
    width: 115%;
    z-index: 20;

    box-shadow: 0 2rem 5rem rgba(0 0 0 .2);
}

/* this is the section for the home section */
.homes {

    grid-column: center-start /center-end;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(25rem, 1fr));
    margin: 15rem 0;
    grid-gap: 7rem;
}

.home {
    background: var(--color-grey-light1);
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-row-gap: 3.5rem;

}

.home img {
    width: 100%;
    grid-column: 1/-1;
    grid-row: 1/2;
    z-index: 1;
}

.heart-full {
    width: 2.5rem;
    height: 2.5rem;
    grid-column: 2/3;
    grid-row: 1/2;
    fill: var(--color-primary);
    z-index: 2;
    justify-self: end;
    margin: 1rem;
}

/* */
.home-location {
    margin-top: 2.5rem;
}

.svg-location {
    width: 2rem;
    height: 2rem;
    margin-right: 1rem;
}

/* */
.home-rooms {
    margin-top: 2.5rem;
}

.rooms-icon {
    width: 2rem;
    height: 2rem;
    fill: var(--color-primary);
    margin-right: 1rem;
}

/* */


.area-icon {
    width: 2rem;
    height: 2rem;
    fill: var(--color-primary);
    margin-right: 1rem;
}

/* */
.home-price,
.home-area,
.home-rooms,
.home-location {
    font-size: 1.5rem;
    margin-left: 2rem;
    display: flex;
    align-items: center;
}

.price-icon {
    width: 2rem;
    height: 2rem;
    fill: var(--color-primary);
    margin-right: 1rem;
}

.design {
    grid-column: 1/-1;
}

.homes-header {
    grid-column: 1/-1;
    font-size: 1.6rem;
    text-align: center;

    background: var(--color-secondary);
    font-family: var(--font-family1);
    padding: 1.25rem;
    color: #fff;
    font-weight: 400;
    width: 80%;
    justify-self: center;
    grid-row: 1/2;
    z-index: 3;
    align-self: end;
    transform: translateY(50%);
    transition: all .2s;



}



/* this is the part for gallery */
.galleries {
    background: var(--color-grey-light2);
    grid-column: repeat-start/repeat-end;
    display: grid;
    grid-template-columns: repeat(8, 1fr);
    grid-template-rows: repeat(7, 5vw);
    grid-gap: 1.5rem;
    padding: 1.5rem;
}

.galleries img {
    width: 100%;
    height: 100%;
    /*the object-fit here helps to fit the images perfectly in one cell without overlapping to another cell */
    object-fit: cover;
    display: block;
}

.galleries .oo-first {
    grid-column: 1/3;
    grid-row: 1/3;
}

.galleries .oo-second {
    grid-column: 3/6;
    grid-row: 1/4;
}

.galleries .oo-third {
    grid-column: 6/7;
    grid-row: 1/3;
}

.galleries .oo-fourth {
    grid-column: 7/10;
    grid-row: 1/3;
}

.galleries .oo-fifth {
    grid-column: 1/3;
    grid-row: 3/6;

}

.galleries .oo-sixth {
    grid-column: 3/5;
    grid-row: 4/6;
}

.galleries .oo-seventh {
    grid-column: 5/6;
    grid-row: 4/5;
}

.galleries .oo-eighth {
    grid-column: 6/8;
    grid-row: 3/5;
}

.galleries .oo-nineth {
    grid-column: 8/10;
    grid-row: 3/6;
}

.galleries .oo-tenth {
    grid-column: 1/2;
    grid-row: 6/8;
}

.galleries .oo-eleventh {
    grid-column: 2/4;
    grid-row: 6/8;
}

.galleries .oo-twelveth {
    grid-column: 4/5;
    grid-row: 6/8;
}

.galleries .oo-thirteenth {
    grid-column: 5/8;
    grid-row: 5/8;
}

.galleries .oo-fourteenth {
    grid-column: 8/10;
    grid-row: 6/8;
}

/* this is the part for the footer */
.footer {
    background: var(--color-secondary);
    grid-column: repeat-start/repeat-end;
    padding: 8rem;
}

ul>li {
    list-style: none;

}

.nav-link {
    text-decoration: none;
}

.nav {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(15rem, 1fr));
    grid-gap: 1rem;
    align-items: center;
}

.nav-link:link,
.nav-link:visited {
    text-transform: uppercase;
    color: #fff;

    font-size: 1.1rem;
    padding: 1.4rem;
    font-family: var(--font-family1);
    text-align: center;
    transition: all .2s;





}

.nav-link:hover,
.nav-link:active {
    background-color: var(--color-grey-dark2);
    transform: translateY(-2rem)
}

.copy {
    color: #aaa;
    font-size: 1.4rem;
    text-align: center;
    margin-top: 6rem;
    width: 100%;
}

/* nav bar section */
.nav-btn {
    width: 4.5rem;
    height: 3px;
    border: none;
    border-radius: 0;
    background-color: #fff;

    margin-top: 4rem;
}

.nav-btn::before,
.nav-btn::after {
    content: "";
    width: 4.5rem;
    height: 3px;
    display: block;
    background-color: #fff;


}

.nav-btn::after {
    transform: translateY(1.3rem);
}

.nav-btn::before {
    transform: translateY(-1.3rem);
}

/* this is the header part */
.header {
    background: var(--color-grey-dark1);
    grid-column: repeat-start/col-end 6;
    background-image: linear-gradient(rgba(4, 9, 30, 0.6), rgba(4, 9, 30, 0.7)), url(../images/13.jpg);
    background-position: center;
    background-size: cover;
    display: grid;
    grid-row-gap: 2.5rem;
    /*grid-template-rows: 1fr min-content 6rem 1fr;*/
    grid-template-rows: 1fr min-content minmax(6rem, min-content) 1fr;
    /*the second is for the responsive*/
    grid-template-columns: minmax(min-content, max-content);
    padding: 8rem;
    padding-top: 4rem;
    justify-content: center;
}

.the-ult {
    font-size: 4.5rem;
    color: var(--color-grey-light1);
    line-height: 1;
}

.seen-logo img {
    max-height: 2.5rem;
    filter: brightness(70%);
    max-width: 100%;
}

.logo-png {
    height: 3rem;
    justify-self: center;
}

.button-style {
    justify-self: start;
    align-self: start;
}

.seen-logo {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-gap: 3rem;
    justify-items: center;
    align-items: center;
}

.seen {
    font-size: 1.7rem;
    color: var(--color-grey-light2);
    display: grid;
    grid-template-columns: 1fr max-content 1fr;
    grid-column-gap: 1.5rem;
    align-items: center;
}

.seen::before,
.seen::after {
    content: "";

    height: 3px;
    display: block;
    background-color: currentColor;

}

/* the three men-standing section */
.three-menstanding {
   /* background: var(--color-secondary);*/
   background: #555;
    grid-column: col-start 7/repeat-end;
    padding: 3rem;
    display: grid;
    justify-content: center;
    align-content: center;
    grid-row-gap: 2rem;
    justify-items: center;
}

.three-menstanding img {
    width: 7rem;
    display: block;
    border-radius: 50%;
}

.three-menstanding h4 {
    font-family: var(--font-family1);
    text-transform: uppercase;
    font-size: 2rem;
    color: #fff
}

.outer-wrapper {
    display: grid;
    grid-template-columns: min-content max-content;
    grid-column-gap: 2rem;
    grid-row-gap: 5vh;
    align-items: center;
}

.outer-wrapper p {
    margin-top: -2px;
    text-transform: uppercase;
    color: var(--color-grey-light2);
    font-size: 1.5rem;
}

/* this is the media querry part of the code */
@media(max-width:1200px) {
    html {
        font-size: 50%;

    }
}

/* media querry to taje the sid bar top */
@media (max-width:1000px) {
    .body-container {
        display: grid;
        /* with the grid-templates-rows below, we are defining the layout of how the contents will adapt
    to sizing in row order */
        grid-template-rows: 6rem 80vh min-content 40vw
            /*min-content min-content min-content*/
            repeat(3, min-content);
        /*repeat(3,min-content) 
    we could also write the three last min-content in the form of repeat(3,min-content). 
    the min-content means that the row should grow or reduce with the page increase or decrease*/

        grid-template-columns: repeat-start minmax(6rem, 1fr) [center-start] repeat(8, [col-start]minmax(min-content, 14rem)[col-end]) [center-end] minmax(6rem, 1fr)[repeat-end];
        /* the col-start and col-end  covers the 8 columns in the middle */
    }

    .nav-bar {
       /* background: var(--color-primary); */
        /* the line of code below sets the side-bar row from the top of the page to the end */
        /* note in the 1/-1, the -1 works if we have a defined number of rows else we use span 2 if we dont have a defined number of rows*/
        grid-row: 1/2;
        /*the line of code below sets the side-bar horizontally to the width maped out from our body layout "sidebar-start-sidebar-end"*/
        grid-column: 1/-1;
        justify-content: flex-end;
        align-items: center;
        

    }

    .nav-btn {
        width: 4.5rem;
        height: 3px;
        border: none;
        border-radius: 0;
        background-color: #fff;

        margin-bottom: 4rem;
        margin-right: 2rem;
    }

    .nav-btn::after {
        transform: translateY(1rem);
    }

    .nav-btn::before {
        transform: translateY(-1.2rem);
    }

}

/* media querry for max-width :900px */
@media (max-width:900px) {
    .body-container {
        display: grid;
        /*here we added a new row to the layout because we want to place the three-men standing section in this new-row */
        /* this is new row starts after the header section */
        /* here we reasign a new layout width for the header section .we want it to occupy the viewport height*/
        /* with the calc we are subtracting the nav-bar height from the header to make it exactly the viewport height */
        grid-template-rows: 6rem calc(100vh - 6rem) min-content min-content 
            /*min-content min-content min-content*/
            ;
        /*repeat(3,min-content) 
    we could also write the three last min-content in the form of repeat(3,min-content). 
    the min-content means that the row should grow or reduce with the page increase or decrease*/

        grid-template-columns: [sidebar-start] 8rem [sidebar-end repeat-start] minmax(6rem, 1fr) [center-start] repeat(8, [col-start]minmax(min-content, 14rem)[col-end]) [center-end] minmax(6rem, 1fr)[repeat-end];
        /* the col-start and col-end  covers the 8 columns in the middle */


        

        
    }
    .three-menstanding {
        grid-column: 1/-1;
    } /* now we want the header to occupy the whole width */
    .header {
        grid-column: 1/-1;
    }

    .outer-wrapper {
        grid-template-columns: repeat(3, min-content max-content);

        grid-column-gap: 5rem;
    }
/* the section for real-pictures */
    .pictures{
        grid-column: 1/-1;
        grid-row:6/7 ;
        padding:3rem

    }
    .stories{grid-column: 1/-1;
    grid-row:5/6 ;}
    .pictures .img{grid-column: 1/5;
    grid-row:1/-1 ;
width:100%;}
    .pictures .imgg{grid-row:1/-1;
    grid-column: 4/7;
width:100%;}
}

/* media-querry for width 500px */
@media (max-width:500px){
    .header{padding: 5rem;}
    .outer-wrapper{
        grid-template-columns: min-content max-content;
    }

} 
